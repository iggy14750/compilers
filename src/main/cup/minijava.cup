
package frontend;

import java_cup.runtime.*;
import syntaxtree.*;
import java.io.File;
import java.io.FileReader;
import java.io.StringReader;

parser code {:
    Scanner s;
    public Parser(Lexer l) {
        s = l;
    }

    public static Object parse(String s) throws Exception {
        return new Parser(new Lexer(new StringReader(s))).parse().value;
    }

    public static Object parse(File f) throws Exception {
        return new Parser(new Lexer(new FileReader(f))).parse().value;
    }
:}

scan with {: return s.next_token(); :};

terminal CLASS, PUBLIC, STATIC, VOID, MAIN, EXTENDS;
terminal RETURN, IF, WHILE, ELSE, SYSOUT, LENGTH, INT_T, BOOLEAN_T, STRING_T;
terminal LEFT_CURLY, RIGHT_CURLY, LEFT_PAREN, RIGHT_PAREN, LEFT_SQUARE_BRACKET, RIGHT_SQUARE_BRACKET;
terminal COMMA, SEMICOLON, DOT, BANG, AND, OR, EQ, EQEQ, LESS_THAN, PLUS, MINUS, TIMES, DIVIDE;
terminal THIS, NEW, FALSE, TRUE;
terminal Integer INT;
terminal String STRING;
terminal String ID;

non terminal Exp expr;

start with expr;

expr ::= 
    TRUE {:
        RESULT = new True();
    :}
    | FALSE {:
        RESULT = new False();
    :}
;